//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArchiveServiceFactory.ArchiveService {
    using System.Runtime.Serialization;
    using System;

    using Common.Contracts;

  [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Document" +
        "")]
    [System.SerializableAttribute()]
    public partial class AuthenticationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CurrentDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginatingUserField;
        
        private string PassTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CurrentDateTime {
            get {
                return this.CurrentDateTimeField;
            }
            set {
                if ((this.CurrentDateTimeField.Equals(value) != true)) {
                    this.CurrentDateTimeField = value;
                    this.RaisePropertyChanged("CurrentDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginatingUser {
            get {
                return this.OriginatingUserField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginatingUserField, value) != true)) {
                    this.OriginatingUserField = value;
                    this.RaisePropertyChanged("OriginatingUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PassToken {
            get {
                return this.PassTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.PassTokenField, value) != true)) {
                    this.PassTokenField = value;
                    this.RaisePropertyChanged("PassToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentSearchResultsData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DocumentSearchResultsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexedDocumentData> DocumentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentsFoundOverLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MoreRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordsFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsFoundField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexedDocumentData> DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentsFoundOverLimit {
            get {
                return this.DocumentsFoundOverLimitField;
            }
            set {
                if ((this.DocumentsFoundOverLimitField.Equals(value) != true)) {
                    this.DocumentsFoundOverLimitField = value;
                    this.RaisePropertyChanged("DocumentsFoundOverLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MoreRecords {
            get {
                return this.MoreRecordsField;
            }
            set {
                if ((this.MoreRecordsField.Equals(value) != true)) {
                    this.MoreRecordsField = value;
                    this.RaisePropertyChanged("MoreRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordsFound {
            get {
                return this.RecordsFoundField;
            }
            set {
                if ((this.RecordsFoundField.Equals(value) != true)) {
                    this.RecordsFoundField = value;
                    this.RaisePropertyChanged("RecordsFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordsFound {
            get {
                return this.TotalRecordsFoundField;
            }
            set {
                if ((this.TotalRecordsFoundField.Equals(value) != true)) {
                    this.TotalRecordsFoundField = value;
                    this.RaisePropertyChanged("TotalRecordsFound");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexedDocumentData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class IndexedDocumentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> AttachedDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> DeliveryPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasIndexesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ImportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> IndexesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompressedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexMapped> MappedIndexesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> PageJumpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ResourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> AttachedDocuments {
            get {
                return this.AttachedDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachedDocumentsField, value) != true)) {
                    this.AttachedDocumentsField = value;
                    this.RaisePropertyChanged("AttachedDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((this.BatchIdField.Equals(value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DeliveryPoints {
            get {
                return this.DeliveryPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryPointsField, value) != true)) {
                    this.DeliveryPointsField = value;
                    this.RaisePropertyChanged("DeliveryPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileBase {
            get {
                return this.FileBaseField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBaseField, value) != true)) {
                    this.FileBaseField = value;
                    this.RaisePropertyChanged("FileBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasIndexes {
            get {
                return this.HasIndexesField;
            }
            set {
                if ((this.HasIndexesField.Equals(value) != true)) {
                    this.HasIndexesField = value;
                    this.RaisePropertyChanged("HasIndexes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ImportDate {
            get {
                return this.ImportDateField;
            }
            set {
                if ((this.ImportDateField.Equals(value) != true)) {
                    this.ImportDateField = value;
                    this.RaisePropertyChanged("ImportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Indexes {
            get {
                return this.IndexesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexesField, value) != true)) {
                    this.IndexesField = value;
                    this.RaisePropertyChanged("Indexes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompressed {
            get {
                return this.IsCompressedField;
            }
            set {
                if ((this.IsCompressedField.Equals(value) != true)) {
                    this.IsCompressedField = value;
                    this.RaisePropertyChanged("IsCompressed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexMapped> MappedIndexes {
            get {
                return this.MappedIndexesField;
            }
            set {
                if ((object.ReferenceEquals(this.MappedIndexesField, value) != true)) {
                    this.MappedIndexesField = value;
                    this.RaisePropertyChanged("MappedIndexes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> PageJumps {
            get {
                return this.PageJumpsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageJumpsField, value) != true)) {
                    this.PageJumpsField = value;
                    this.RaisePropertyChanged("PageJumps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageStart {
            get {
                return this.PageStartField;
            }
            set {
                if ((this.PageStartField.Equals(value) != true)) {
                    this.PageStartField = value;
                    this.RaisePropertyChanged("PageStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Resources {
            get {
                return this.ResourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourcesField, value) != true)) {
                    this.ResourcesField = value;
                    this.RaisePropertyChanged("Resources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidFrom {
            get {
                return this.ValidFromField;
            }
            set {
                if ((this.ValidFromField.Equals(value) != true)) {
                    this.ValidFromField = value;
                    this.RaisePropertyChanged("ValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexMapped", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class IndexMapped : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexName {
            get {
                return this.IndexNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexNameField, value) != true)) {
                    this.IndexNameField = value;
                    this.RaisePropertyChanged("IndexName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexValue {
            get {
                return this.IndexValueField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexValueField, value) != true)) {
                    this.IndexValueField = value;
                    this.RaisePropertyChanged("IndexValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
    [System.SerializableAttribute()]
    public partial class CustomFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TicketNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TicketNumber {
            get {
                return this.TicketNumberField;
            }
            set {
                if ((this.TicketNumberField.Equals(value) != true)) {
                    this.TicketNumberField = value;
                    this.RaisePropertyChanged("TicketNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexSearchCriteraData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class IndexSearchCriteraData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grid {
            get {
                return this.GridField;
            }
            set {
                if ((object.ReferenceEquals(this.GridField, value) != true)) {
                    this.GridField = value;
                    this.RaisePropertyChanged("Grid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchValue {
            get {
                return this.SearchValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchValueField, value) != true)) {
                    this.SearchValueField = value;
                    this.RaisePropertyChanged("SearchValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentSearchResultsIndexedData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DocumentSearchResultsIndexedData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexedDocumentData> DocumentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentsFoundOverLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MoreRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordsFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsFoundField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexedDocumentData> DocumentList {
            get {
                return this.DocumentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentListField, value) != true)) {
                    this.DocumentListField = value;
                    this.RaisePropertyChanged("DocumentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentsFoundOverLimit {
            get {
                return this.DocumentsFoundOverLimitField;
            }
            set {
                if ((this.DocumentsFoundOverLimitField.Equals(value) != true)) {
                    this.DocumentsFoundOverLimitField = value;
                    this.RaisePropertyChanged("DocumentsFoundOverLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MoreRecords {
            get {
                return this.MoreRecordsField;
            }
            set {
                if ((this.MoreRecordsField.Equals(value) != true)) {
                    this.MoreRecordsField = value;
                    this.RaisePropertyChanged("MoreRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordsFound {
            get {
                return this.RecordsFoundField;
            }
            set {
                if ((this.RecordsFoundField.Equals(value) != true)) {
                    this.RecordsFoundField = value;
                    this.RaisePropertyChanged("RecordsFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecordsFound {
            get {
                return this.TotalRecordsFoundField;
            }
            set {
                if ((this.TotalRecordsFoundField.Equals(value) != true)) {
                    this.TotalRecordsFoundField = value;
                    this.RaisePropertyChanged("TotalRecordsFound");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexNameCriteriaData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class IndexNameCriteriaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grid {
            get {
                return this.GridField;
            }
            set {
                if ((object.ReferenceEquals(this.GridField, value) != true)) {
                    this.GridField = value;
                    this.RaisePropertyChanged("Grid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexName {
            get {
                return this.IndexNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexNameField, value) != true)) {
                    this.IndexNameField = value;
                    this.RaisePropertyChanged("IndexName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchValue {
            get {
                return this.SearchValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchValueField, value) != true)) {
                    this.SearchValueField = value;
                    this.RaisePropertyChanged("SearchValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexIdCriteriaData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class IndexIdCriteriaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grid {
            get {
                return this.GridField;
            }
            set {
                if ((object.ReferenceEquals(this.GridField, value) != true)) {
                    this.GridField = value;
                    this.RaisePropertyChanged("Grid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexId {
            get {
                return this.IndexIdField;
            }
            set {
                if ((this.IndexIdField.Equals(value) != true)) {
                    this.IndexIdField = value;
                    this.RaisePropertyChanged("IndexId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchValue {
            get {
                return this.SearchValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchValueField, value) != true)) {
                    this.SearchValueField = value;
                    this.RaisePropertyChanged("SearchValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationInfoData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ApplicationInfoData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexDefinitionData> IndexesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreamNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexDefinitionData> Indexes {
            get {
                return this.IndexesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexesField, value) != true)) {
                    this.IndexesField = value;
                    this.RaisePropertyChanged("Indexes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDam {
            get {
                return this.IsDamField;
            }
            set {
                if ((this.IsDamField.Equals(value) != true)) {
                    this.IsDamField = value;
                    this.RaisePropertyChanged("IsDam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreamName {
            get {
                return this.StreamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamNameField, value) != true)) {
                    this.StreamNameField = value;
                    this.RaisePropertyChanged("StreamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexDefinitionData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class IndexDefinitionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.DropDownItemData> DropDownKeyValuePairField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexColumnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserInterfaceXmlSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.DropDownItemData> DropDownKeyValuePair {
            get {
                return this.DropDownKeyValuePairField;
            }
            set {
                if ((object.ReferenceEquals(this.DropDownKeyValuePairField, value) != true)) {
                    this.DropDownKeyValuePairField = value;
                    this.RaisePropertyChanged("DropDownKeyValuePair");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexColumnId {
            get {
                return this.IndexColumnIdField;
            }
            set {
                if ((this.IndexColumnIdField.Equals(value) != true)) {
                    this.IndexColumnIdField = value;
                    this.RaisePropertyChanged("IndexColumnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndexName {
            get {
                return this.IndexNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexNameField, value) != true)) {
                    this.IndexNameField = value;
                    this.RaisePropertyChanged("IndexName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserInterfaceXmlSettings {
            get {
                return this.UserInterfaceXmlSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInterfaceXmlSettingsField, value) != true)) {
                    this.UserInterfaceXmlSettingsField = value;
                    this.RaisePropertyChanged("UserInterfaceXmlSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DropDownItemData", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DropDownItemData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueId {
            get {
                return this.ValueIdField;
            }
            set {
                if ((this.ValueIdField.Equals(value) != true)) {
                    this.ValueIdField = value;
                    this.RaisePropertyChanged("ValueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nexdox.com", ConfigurationName="ArchiveService.IDocument")]
    public interface IDocument : IServiceContract
    {
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearch", ReplyAction="http://nexdox.com/IDocument/DocumentSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearch(
                    ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, 
                    int firstRow, 
                    int lastRow, 
                    string applicationId, 
                    string grid, 
                    int region, 
                    string search1, 
                    string search2, 
                    string search3, 
                    string search4, 
                    string search5, 
                    string search6, 
                    string search7, 
                    string search8, 
                    string search9, 
                    string search10);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearchAll", ReplyAction="http://nexdox.com/IDocument/DocumentSearchAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchAllCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearchAll(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexSearchCriteraData> indexSearchCritera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearchAllVerbose", ReplyAction="http://nexdox.com/IDocument/DocumentSearchAllVerboseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchAllVerboseCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsIndexedData DocumentSearchAllVerbose(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexSearchCriteraData> searchCriteriaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearchMap", ReplyAction="http://nexdox.com/IDocument/DocumentSearchMapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchMapCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearchMap(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexNameCriteriaData> searchCriteriaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearchMapVerbose", ReplyAction="http://nexdox.com/IDocument/DocumentSearchMapVerboseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchMapVerboseCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsIndexedData DocumentSearchMapVerbose(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexNameCriteriaData> searchCriteriaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearchMulti", ReplyAction="http://nexdox.com/IDocument/DocumentSearchMultiResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchMultiCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearchMulti(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexIdCriteriaData> searchCriteriaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/DocumentSearchMultiVerbose", ReplyAction="http://nexdox.com/IDocument/DocumentSearchMultiVerboseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/DocumentSearchMultiVerboseCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsIndexedData DocumentSearchMultiVerbose(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexIdCriteriaData> searchCriteriaList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/GetDocument", ReplyAction="http://nexdox.com/IDocument/GetDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/GetDocumentCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        byte[] GetDocument(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/GetDocumentCustomProperty", ReplyAction="http://nexdox.com/IDocument/GetDocumentCustomPropertyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/GetDocumentCustomPropertyCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        string GetDocumentCustomProperty(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, string documentid, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/GetApplication", ReplyAction="http://nexdox.com/IDocument/GetApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/GetApplicationCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.ApplicationInfoData GetApplication(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nexdox.com/IDocument/IndexAppSearch", ReplyAction="http://nexdox.com/IDocument/IndexAppSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ArchiveServiceFactory.ArchiveService.CustomFault), Action="http://nexdox.com/IDocument/IndexAppSearchCustomFaultFault", Name="CustomFault", Namespace="http://schemas.datacontract.org/2004/07/ArchiveWcfServices.DataContracts.Error")]
        ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData IndexAppSearch(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, string search1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentChannel : ArchiveServiceFactory.ArchiveService.IDocument, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentClient : System.ServiceModel.ClientBase<ArchiveServiceFactory.ArchiveService.IDocument>, ArchiveServiceFactory.ArchiveService.IDocument {
        
        public DocumentClient() {
        }
        
        public DocumentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearch(
                    ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, 
                    int firstRow, 
                    int lastRow, 
                    string applicationId, 
                    string grid, 
                    int region, 
                    string search1, 
                    string search2, 
                    string search3, 
                    string search4, 
                    string search5, 
                    string search6, 
                    string search7, 
                    string search8, 
                    string search9, 
                    string search10) {
            return base.Channel.DocumentSearch(authenticationData, firstRow, lastRow, applicationId, grid, region, search1, search2, search3, search4, search5, search6, search7, search8, search9, search10);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearchAll(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexSearchCriteraData> indexSearchCritera) {
            return base.Channel.DocumentSearchAll(authenticationData, firstRow, lastRow, region, startDate, endDate, indexSearchCritera);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsIndexedData DocumentSearchAllVerbose(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexSearchCriteraData> searchCriteriaList) {
            return base.Channel.DocumentSearchAllVerbose(authenticationData, firstRow, lastRow, region, startDate, endDate, searchCriteriaList);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearchMap(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexNameCriteriaData> searchCriteriaList) {
            return base.Channel.DocumentSearchMap(authenticationData, firstRow, lastRow, region, startDate, endDate, searchCriteriaList);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsIndexedData DocumentSearchMapVerbose(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexNameCriteriaData> searchCriteriaList) {
            return base.Channel.DocumentSearchMapVerbose(authenticationData, firstRow, lastRow, region, startDate, endDate, searchCriteriaList);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData DocumentSearchMulti(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexIdCriteriaData> searchCriteriaList) {
            return base.Channel.DocumentSearchMulti(authenticationData, firstRow, lastRow, region, startDate, endDate, searchCriteriaList);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsIndexedData DocumentSearchMultiVerbose(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, int region, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Collections.Generic.List<ArchiveServiceFactory.ArchiveService.IndexIdCriteriaData> searchCriteriaList) {
            return base.Channel.DocumentSearchMultiVerbose(authenticationData, firstRow, lastRow, region, startDate, endDate, searchCriteriaList);
        }
        
        public byte[] GetDocument(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, string id) {
            return base.Channel.GetDocument(authenticationData, id);
        }
        
        public string GetDocumentCustomProperty(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, string documentid, string key) {
            return base.Channel.GetDocumentCustomProperty(authenticationData, documentid, key);
        }
        
        public ArchiveServiceFactory.ArchiveService.ApplicationInfoData GetApplication(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, string applicationId) {
            return base.Channel.GetApplication(authenticationData, applicationId);
        }
        
        public ArchiveServiceFactory.ArchiveService.DocumentSearchResultsData IndexAppSearch(ArchiveServiceFactory.ArchiveService.AuthenticationData authenticationData, int firstRow, int lastRow, string search1) {
            return base.Channel.IndexAppSearch(authenticationData, firstRow, lastRow, search1);
        }
    }
}
